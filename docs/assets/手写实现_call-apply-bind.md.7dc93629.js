import{_ as n,c as s,o as a,b as t}from"./app.956ff0a1.js";const f='{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"\u624B\u5199\u5B9E\u73B0/call-apply-bind.md"}',p={},o=t(`<blockquote><p>\u5B9E\u73B0call \u6CE8\u610Fthis\u5C31\u662F\u8C03\u7528\u7684\u51FD\u6570\uFF0C\u5C06\u51FD\u6570\u6302\u8F7D\u5230\u5BF9\u8C61\u4E0A\uFF0C\u8C03\u7528\u5B8C\u6210\u540E\uFF0C\u5220\u9664</p></blockquote><div class="language-js"><pre><code>  <span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">fakeCall</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// this \u5C31\u662F\u8C03\u7528\u7684\u51FD\u6570\u5BF9\u8C61\uFF0C\u6211\u4EEC\u9700\u8981\u653E\u5230obj\u4E0A\uFF0C\u5E76\u4E14\u8FD8\u4E0D\u80FD\u5F71\u54CD\u522B\u7684key\uFF0C\u6240\u4EE5\u6211\u4EEC\u7528Symbol\u505A</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">delete</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">&quot;20&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">arg1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> arg1<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> result <span class="token operator">=</span> foo<span class="token punctuation">.</span><span class="token function">fakeCall</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&quot;arg1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;arg2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6700\u540E\u503C\u554A&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u53EF\u4EE5\u6536\u5230\u53C2\u6570\u4E86</span>
</code></pre></div><blockquote><p>\u5B9E\u73B0apply \u5185\u90E8this\u7528\u8FD9\u4E2A\u51FD\u6570\uFF0C\u8C03\u7528\u4E00\u4E0Bcall\u5373\u53EF</p></blockquote><div class="language-js"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">fakeApply</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> arrArg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token operator">...</span>arrArg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><blockquote><p>\u5B9E\u73B0bind \u6CE8\u610F\u83B7\u53D6\u539F\u51FD\u6570\u3002 \u8FD4\u56DE\u4E00\u4E2A\u5168\u65B0\u7684\u51FD\u6570\uFF0C\u51FD\u6570\u5185\u90E8\u8C03\u7528\u539F\u51FD\u6570call\u4E00\u4E0B\u3002\u6CE8\u610F\u4E24\u6B21\u53C2\u6570\u5408\u5E76</p></blockquote><div class="language-js"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">fakeBind</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>args2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre></div>`,6),c=[o];function e(u,l,k,i,r,d){return a(),s("div",null,c)}var g=n(p,[["render",e]]);export{f as __pageData,g as default};
